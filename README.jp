  ./CHANGES.jp に重要な変更点が書かれています。必ず毎回御覧下さい。

-- ne (NxEdit) -----------------------------------------------------
解説    : コンソールベースで軽い Vz clone なテキストエディタ
version : 3.05  -00/04/21-
著作者  : 佐々木 "えるちゃん" 俊介 <ele@pop17.odn.ne.jp>
元著作者: Ｎｅｃｏ＠任天堂 <shirai@nintendo.co.jp>
        : 根橋 勲＠セイコーエプソン <nebashi@nb.epson.co.jp>
一次配布: http://hp.vector.co.jp/authors/VA018758/ne/
        : http://www.vector.co.jp/vpack/filearea/unix/writing/edit/
扱い    : GNU  GENERAL PUBLIC LICENSE  Version 2
確認OS  : FreeBSD 4.0R, FreeBSD 3.2R, LINUX(Vine 1.1)
--------------------------------------------------------------------

[http://hp.vector.co.jp/authors/VA018758/ne/]
  ne の開発ページはこちらに移転しました。
  いきなりの移転で御迷惑をおかけしました m(_ _)m。

[http://www65.tcup.com/6520/ele.html]
  ne の掲示板を用意しています。


§ 概要

  ne は動作が極めて軽快な wordstar 系テキストエディタです。
  主要な操作や編集方式が MS-DOS系OS で有名な Vz 互換ですので、
  MS-DOS系OS や Windows などで Vz、Mifes など wordstar 系
  テキストエディタを使っていた方には使いやすいと思います。

○ 特徴

  o 動作が極めて軽快である
  o 漢字コードを自動判別する
  o シグナルを受けた場合、可能な限りプロファイルを保存してから終了する
  o 同一ユーザーが複数の ne を使用時、既に開いているファイルを保護する
  o 環境変数 NE_TERM 及び TERM に合わせて独自の端末設定を行える

  o Vz エディタの主要な操作方法・機能を実装している
    o スタッカブルな文字削除アンドゥー
    o スタッカブルなブロックバッファー
    o カーソルの移動方向により二種類のブロックを使い分ける方向感応
    o なるべく視点が動かなくてすむカーソル位置保持
    o カーソルが行を離れるまで行を更新しない行編集
    o キーボードの操作を覚えさせるキーボードマクロ機能
    o ツインウィンドーのファイラーを装備
    o その時点の編集状態をそのまま保存するプロファイル機能

○ 動作 OS

  現在の ne のベースとなったＮＥＣＯ氏の NxEdit バージョン 2.04 は
  いろいろな UNIX系OS で動作するようプログラムされているのですが、
  わたしが開発途中に可搬性を落してしまった部分が多々あります。

  pre13 以降 autoconf を用いるように改編したのですが、
  開発環境である FreeBSD と、Vine Linux のみしかチェックが出来ませんが、
  SunOS 5.6 でも動作したという報告を受けています。

○ ディレクトリー構成

  o ./

    このディレクトリです。
    ./CHANGES.jp には重要な変更点を記載しています。必ず御覧ください。

  o doc/
    いろいろなドキュメントが納められています。

  o etc/
    設定ファイルのサンプルや、そこから呼び出すファイルがあります。

  o lib/
    ライブラリのコードがあります。
    このディレクトリーのコードは別のライセンスを持ちます。
    詳しくは lib/README.jp を御覧下さい。

  o old_doc/
    ベースとなった NxEdit 2.04 のドキュメントは全てここにあります。
    ここでかかれている事のほとんどは既に通用しなくなっています。

  o src/
    ソースコードがあります。

○ 不具合の報告の仕方

  不具合がある場合などに動作環境を簡単なレポート作成機能を付けました。
  まだまだ完全なレポートは出来ませんが、利用してみてください。

  csh 系の場合:

    exsample$ ./configure >& report.log
    exsample$ make >>& report.log
    exsample$ src/ne -V >>& report.log

  bash 等 sh 系の場合:

    exsample% ./configure 2> report.log
    exsample% make 2>> report.log
    exsample% src/ne -V 2>> report.log


§ 運用

  インストール方法は ./INSTALL.jp というファイルを参照してください。
  詳しい使用方法等は man をみてください。

    sample$ jman ne
    sample$ man ne

○ 実行方法

    sample% ne [ファイル]

  です。

○ 終了の仕方

  [ESC]C、[ESC]X 等でそれぞれ終了可能です。

  もし編集を加えていた場合には、
  「このファイルは変更されています.. 保存しますか... ?(y/n or ESC)」
  と表示されますので、保存するなら Y を押し、破棄するならば N を押し、
  終了自体をキャンセルし編集に戻るならば ESC を押してください。

  [ESC]C なら編集中のファイルを終了し、
  [ESC]X なら全部をまとめて終了しようとします。

○ キー設定、設定ファイル

  ne が読みだす設定ファイルでパスが指定されていない場合、
  まずホームの下の .ne ディレクトリー (~/.ne/) を調べます。
  次にシステムデフォルトのディレクトリー (/usr/local/etc/ne/) を調べます。
  つまり、各ユーザーのホームの下の .ne ディレクトリーが優先されます。
  これを設定ファイルの検索パスと呼びます。

  パスを含めて指定してある場合、設定ファイルの検索パスを調べません。


  ne は起動時に設定ファイルの検索パスの nerc を読みます。
  つまり最初に ~/.ne/nerc を探し、
  無ければ /usr/local/etc/ne/nerc を探します。

  /usr/local/etc/ne/nerc に Vz ライクな標準設定ファイルがありますので、
  これを ~/.ne/nerc にコピーしてから設定の変更をしてみてください。
  このデフォルトで用意されてる nerc ではオプション設定のみを行い、
  キーアサインや端末設定を行うファイルを呼び出すだけにしています。
  nerc のみにこれら全ての設定をいれる事も可能ですがお勧めはしません。
  使用する設定ファイル群を ~/.ne の下にコピーしてから、
  設定の変更を行う事をお勧めします。


ファイル名   役割
------------ -------------------------------------------------------
nerc         デフォルトと同じ内容の設定サンプル
nerc.ele     作者が使っている設定

key.vz       Vz ライクなキーアサイン
key.ele      作者が使っているカスタマイズし倒したキーアサイン
key.eff      ファイラーのキーアサイン
key.system   システムキーのキーアサイン
key.mi       Mifes ライクなキーアサイン(*注意)
key.vzmi     Vz の mi.def ライクなキーアサイン(*注意)

term         端末の汎用設定 (デフォルトと同じ)
term.kterm   環境変数 NE_TERM か TERM が kterm の時の端末固有の設定
term.rxvt    環境変数 NE_TERM か TERM が rxvt の時の端末固有の設定
------------ --------------------------------------------------------

*注意:
  key.mi は Mifes のヘルプファイルと elis の elmi.def を参考にして、
  key.vzmi は Vz の mi.def を参考にして書いてみたものです。
  現在の ne には必要なコマンドのうちいくつかが実装されてなかったり、
  色々な事情により未完成です。

  というかわたしが Mifes を使った事がないのでわかりません(^^;;;;。
  Mifes 系の操作を使いたい人はこれをベースにしてみてください。
  NxEdit 2.04 以前の設定である old_doc/nxrc が
  実はかなり Mifes ライクなようですのでそれも参考になると思います。

○ 環境別の端末の独自設定について

  ne は termcap (の一部) を利用して端末処理を行います。
  termcap は、端末毎に異なる条件を吸収する仕掛けですが、
  実は多くの環境で termcap が間違っているようです。
  そこで、この ne は間違った termcap 対策を行えるようにしています。

  起動時に設定ファイルとして term.**** を読みだします。
  この **** は、環境変数 NE_TERM 及び TERM を意味します。
  つまりこれらの環境変数に応じて設定個別の設定ファイルを読みだします。
  これにより、端末依存する独自の設定などを行う事ができます。

  termcap では指示出来ない新しい機能を使う事もできます。
  rxvt を使っている人は、是非とも環境変数 NE_TERM か TERM のどちらかに、
  rxvt を指定してみてください。Shift+カーソル等が使えるようになります。
  ただし、通常の環境では termcap エントリに rxvt がないみたいですので、
  環境変数 TERM に rxvt を設定するとまずいかもしれませんので、
  環境変数 NE_TERM に指定するのが無難かもしれません。


  何か有用な設定ができましたら是非とも御一報ください。

○ プロファイル機能

  シグナルによる終了や、プロファイル保存コマンドを実行した場合、
  その時点での編集状態をプロファイルとして保存します。

  "ne -r"として起動すると、このプロファイルをオープンし、
  その時点での編集状態を復活させようとします。
  開いたプロファイルは自動で消されます。

○ ファイルロック機能

  ファイルオープン時にロックファイルにそのファイル名を書き出します。
  ファイルクローズ時はそのファイル名を取り消します。
  これにより同一ユーザーが同じファイルを開く事を防止します。

○ システムガイドラインの見方

  画面の一番上のラインに表示されているのがシステムガイドラインです。
  いちおなるべく Vz 1.6 に近いようにはしたつもりなのですが、
  ちょっと(かなり?)異なっています。

12 3    4    5   6     7     8 9abc
-- ---- ---  --- ----  ----- ---------------------------
Pi 0001/  1%:001[0000]  7475  1EL:/usr/home/ne/README.jp

  というふうになっていますが左から説明。

   1. ページングモード。
      P:ノーマルページングモード。 /S:文字検索モード。
   2. インサートモード。
      i:挿入 /R:上書き
   3. 現在編集行。
   4. 現在編集行の全体からの％。
   5. 現在編集位置。
   6. 現在カーソルの指している文字の文字コード。
      2ストローク入力の際にはその一文字目のコード。
   7. 編集中のファイルのサイズ。
   8. 編集ファイル番号。
   9. 編集中のファイルの文字コード。
      E:EUC /S:SJIS /J:JIS
   a. 編集中のファイルのリターンコードの扱い。
      L:LF /+:CR LF /C:CR
   b. 編集中のファイルを変更したかどうか。
      ::まだしていない。 /*:変更した。
   c. 編集中のファイルのファイルネーム。

○ ファイラー

  ファイルをオープンする時にファイル名を入力せずリターンを押すと、
  シンプルなツィンウィンドーのファイラーが立ち上がります。
  ただし、これの操作体系に限っては Vz ファイラーではなくて、
  FD 系の操作体系をしています。
＃Vz 系の操作だとファイル処理はメニューを使用しなければならないので。

  いずれ X68k の Mint や PC-98x1 の FL ばりの拡張をすると思います。


§ 後書き

○ ベースバージョンの NxEdit 2.04 に比べて退化している部分。

  o ヘルプコマンドを一旦廃止。
  o multi-search/replace などなどを一旦廃止。
  o いくつかの編集コマンドを一旦廃止。
  o tab->space 変換を一旦廃止。
  o カーソル行アンダーライン表示を一旦廃止。
  o ヴィジュアルマーク機能を一旦廃止。

○ Vz と重大な違い

  o なんらかの言語を内蔵していない
  o 物理行モードを持っていない

○ 参照/引用したもの

  o MS-DOS 版フリーソフトウェア qkc
  o MS-DOS 版フリーソフトウェア ekc
  o MS-DOS(98)版 Vz エディタ及びマニュアル
  o MSX-DOS 版 Viper/Zero エディタ
  o MS-DOS(98)版フリーソフトウェア FL
  o X68k版 フリーソフトウェア Mint
  o フリーソフトウェア FD clone
  o MS-DOS(汎用)版フリーソフトウェア FM 2.63

  o MS-DOS(98)版フリーソフトウェア Elis の ELMI.DEF
  o MS-DOS(AT)版 Mifes の ヘルプファイル

  o public domain の tparm.c

  o termcap(3), termcap(5)等など man の数々。jman, jpmanに感謝(^^)。

○ このソフトウェアの扱いについて。

  GNU GPL(General Public Licence) version 2 という
  ライセンスによるフリーソフトウェアです。
  詳細は COPYING.jp 及び COPYING を御覧下さい。
  ライセンスに反しない限り、配布・改造などを自由に行って構いません。

  但し、lib/ 以下は別のライセンスです。
  詳しくは lib/README.jp を御覧ください。
＃GPL プログラムとリンクが可能な BSD copyright です。

○ 免責

  このバージョンはまだまだ開発途中です。
  内部構造や、設定ファイルががらりと変わる可能性があります。

  また、編集中のファイルを失う可能性が無いとは限りません。
  もちろんそのようなバグが出ないように細心の注意を払っていますが、
  出る可能性がゼロである保証は出来ませんので御了承下さい。
＃数ヵ月常用していてそういうバグも無いので大丈夫とは思いますが....

  現バージョンは画面描画が化ける可能性があります。
  発見したらお知らせ下さい m(_ _)m。

○ 感謝

  o 以前のバージョンの著作者である
    根橋 勲＠セイコーエプソンさんとＮｅｃｏ＠任天堂さん。
    NxEdit 2.04 が無ければおそらく今のような ne は無かったと思います。

  o 英語 man の作成をしてくださった Noriyuki SATOH さん。

  o Debianize をしてくださった NOSHIRO Shigeo さん。

  o FreeBSD ports作成時、添削等して頂いた FreeBSD-ports-jp の皆さん。
    しかも、Issei Suzukiさんは pkg/DESCR を書いてくださいました。

  o 公開記念として Vine 用の RPM 化をしてくれた
    柴田 ``τακαちゃん'' 貴夫氏。

  o 後、色々と要望・感想などをくださった皆さん。


  皆さんありがとうございます。
  感謝致します (^.^)。

○ メールお待ちしております

  要望・感想などありましたら ele@pop17.odn.ne.jp までお便りください。
  あなたのメールを首を長くしてお待ちしております。

